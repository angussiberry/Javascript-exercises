window.answers = () => {
    // Each of the following sections is a separate problem. Read the comments and do what they say.
    // Don't delete or change the instructional comments

    // #1 This code checks a variable 'hour' to determine an appropriate greeting
    // Add to it so that it will greet with "Good evening" if it is 7pm (19:00) or later
    let greeting
    if (hour < 12) {
        greeting = "Good morning"
    } else if (hour < 19) {
        greeting = "Good afternoon"
    } else if (hour < 24) { //only hours left between 19 - 24
        greeting = "Good evening"
    } else {
        greeting = "Error: Incorrect input for variable hour as > 24" //hours in a day cannot exceed 24
    }


    // #2 This code sets output to true if input is not zero
    // Change the condition so that output will equal true only if input is an even number greater than 20 or an odd number less than 10
    let output = false
    if (input !== 0 && input % 2 == 0 && input > 20 || input < 10 && input % 3 == 0 || input == 1) { //three separate boolean conditions with multiple and condition in each boolean
        output = true
    }


    // #3 Use a ternary operator (x = cond ? a : b) so that if there is exactly 1 rabbit, this line instead results in "There is 1 rabbit"
    let rabbitString = numRabbits !=1 ? "There are " +  numRabbits + " rabbits" : "There is " +  numRabbits + " rabbit" // condition -> if true : if false
    


    // #4 Write a for-loop that uses console.log to print out the numbers from 1 to 10 (inclusive) in ascending order
    for ( i = 1 ; i <= 10 ; i ++){
        console.log(i) //iterating forward in i by 1 each time
    }


    // #5 Write a for-loop that uses console.log to print out the numbers from 1 to 10 (inclusive) in descending order
    for (i=10;i>0;i--){
        console.log(i) //iterating backwards from 10
    }


    // #6 Write a for-loop that will add up all the positive integers below 100 and store it in the sum variable
    let sum = 0
    // For loop goes here:
    for (i=1;i<100;i++){
        sum = i + sum //integer increment + previous sum value
    }


    // #7 This for loop prints a 3x3 square of #s. Use a nested for-loop to make it print a square of numbers instead (123, 456, 789)
    for (let i=1; i<=7; i+= 3) { //iterating in 3s as row length = 3 calling row 0 as 1
        let line = 0 // reset counter
        for(j=0;j<=2; j++){ // iterating columns by 1
            hash = i + j //column + row = coordinate and value
            line = line + hash + '' //line increases in character length by each coordinate
        }
        console.log(line) //print each row
    }


    // #8 Write a for-loop that finds the largest common factor of these two numbers and stores it in lcf
    // (The largest common factor is the biggest number that both numbers are divisible by)
    let number1 = 1848
    let number2 = 1820
    let lcf = 0
    // Loop goes here:
    for (i=1; i<=number2; i++){ //starting at i=1 as 1 will always be a cf for two integers and the smallest number is the limit of lcf
        if (number1 % i == 0 && number2 % i == 0){
            lcf = i
            cf2 = number2/i
            if (lcf >= cf2) break;
        }
    }

    // #9 Each new term in the Fibonacci sequence is generated by adding the previous two terms.
    // By starting with 1 and 1, the first 10 terms will be: 1, 1, 2, 3, 5, 8, 13, 21, 34, 55
    // Find the largest Fibonacci below 5000 and store it in bigFib
    let bigFib
    // Solution goes here:
    let current = 1 // the current step
    let prev = 1 //previous step starting at 1 and 1
    while(current<=5000){ //limit as current will not exceed 5000 and once it does condition met
        next = current + prev // forward propagation
        prev = current //reassignment of variables
        current = next 
    }
    bigFib = prev //condition met when while loop ends and current exceeds limit, previous step = solution

    



    // #10 (Bonus hard challenge)
    // A Pythagorean  triplet is a set of three integers, a < b < c, for which a**2 + b**2 = c**2
    // For example, 3**2 + 4**2 = 9 + 16 = 25 = 5**2.
    // There exists exactly one Pythagorean  triplet for which a + b + c = 1000.
    // Find a, b, and c
    let a
    let b
    let c
    // Solution goes here:
    let n = 1000
    for(a1=1; a1 <= n-1; a1++){ //iterate from 1 to lim that obeys all rules n-1 < n < c
        for(b1=a1; b1<=n; b1++){ //iterates from a as a < b at all times
            c1 = Math.sqrt(a1**2 + b1**2); // Triplet
            sum = a1 + b1 + c1 
            if(c1 % 1 === 0 && sum == n){ // Must be an integer and satisfy the sum condition
                a=a1;
                b=b1;
                c=c1; //Assign final variables before break
                break;
            }
        }
    }




    // #11 Complete this function so that it returns the product of the three numbers (the three numbers multiplied together)
    function product (num1, num2, num3) {
        return num1*num2*num3 //can return function as is
    }

    // #12 Write a function called 'exclaim' that takes a single string and logs it with an exclamation mark after it
    // For example, exclaim("hello") should log "hello!" to the console
    function exclaim (phrase){
        phrase = phrase + "!"
        console.log(phrase) // Log referring to a console.log()
    }



    // #13 We would like "A", "B", "C", "D", "E" to be printed in the correct order.
    // Make that happen by invoking the right functions in the correct order.
    // Do not modify the functions themselves!
    function theFirst () {
        theSecond()
        console.log("B")
    }

    function theSecond () {
        console.log("A")
    }

    function theThird () {
        console.log("C")
        theFourth()
    }

    function theFourth () {
        theFifth()
    }

    function theFifth () {
        console.log("D")
        console.log("E")
    }
    // Invoke your chosen function(s) after this line:
    theFirst() //Invokes 1 and 2
    theThird() //Invokes 4 and 5

    // #14 Write a function called largestCommonFactor that takes two number
    // and returns the largest common factor of those numbers
    function largestCommonFactor (number1, number2) {
        min = Math.min(number1,number2) //working out which is the biggest and smallest
        max = Math.max(number1,number2)
        if(max % min == 0){ //if one is divisible by the other the min is the lcf
            return min
        }
        else{ //if not use previous lcf solution from earlier
            for (i=1; i<=min; i++){ //starting at i=1 as 1 will always be a cf for two integers
                if (number1 % i == 0 && number2 % i == 0){
                    lcf = i
                    cf2 = number2/i
                    if (lcf >= cf2) break; //breaks out of for loop
                    }
                }
            return lcf //last value of lcf is the solution
        }
}


};